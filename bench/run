#!perl


use URI;
use URI::Fast qw(uri);
use Benchmark qw(:all);

my @urls = (
  '/foo/bar/baz',
  'http://www.test.com',
  'https://test.com/some/path?aaaa=bbbb&cccc=dddd&eeee=ffff',
  'https://test.com/some/path/?aaaa=bbbb&cccc=dddd&eeee=ffff',
  'https://user:pwd@192.168.0.1:8000/foo/bar?baz=bat&slack=fnord&asdf=the+quick%20brown+fox+%26+hound#foofrag',
);

timethese 400_000, {
  'file'     => sub{ my $uri = uri $urls[0]; $uri->scheme; },
  'simple'   => sub{ my $uri = uri $urls[1]; $uri->scheme; },
  'basic'    => sub{ my $uri = uri $urls[2]; $uri->scheme; },
  'trailing' => sub{ my $uri = uri $urls[3]; $uri->scheme; },
  'complete' => sub{ my $uri = uri $urls[4]; $uri->scheme; },
};

print "\n";

timethese 200_000, {
  '                URI - ctor' => sub{ my $uri = URI->new($urls[1]) },
  '          URI::Fast - ctor' => sub{ my $uri = uri $urls[1] },
  'URI::Fast::fast_URI - ctor' => sub{ URI::Fast::fast_URI($urls[1]) },
};

print "\n";

timethese 200_000, {
  '      URI - basic' => sub{ my $uri = URI->new($urls[4]); $uri->scheme },
  'URI::Fast - basic' => sub{ my $uri = uri $urls[4]; $uri->scheme },
};

print "\n";

timethese 200_000, {
  '      URI - auth' => sub{ my $uri = URI->new($urls[4]); $uri->host },
  'URI::Fast - auth' => sub{ my $uri = uri $urls[4]; $uri->host },
};

print "\n";

timethese 200_000, {
  '      URI - path' => sub{ my $uri = URI->new($urls[4]); ($uri->path_segments) },
  'URI::Fast - path' => sub{ my $uri = uri $urls[4]; $uri->split_path },
};

print "\n";

timethese 200_000, {
  '      URI - query' => sub{ my $uri = URI->new($urls[4]); $uri->query_form },
  'URI::Fast - query' => sub{ my $uri = uri $urls[4]; $uri->param('asdf') },
};

print "\n";
